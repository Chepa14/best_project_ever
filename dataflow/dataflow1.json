{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CopyDbPath",
						"type": "DatasetReference"
					},
					"name": "Arrivals"
				},
				{
					"dataset": {
						"referenceName": "CopyDbPath",
						"type": "DatasetReference"
					},
					"name": "Sales"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputStream",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				}
			],
			"script": "source(output(\n\t\tid as short,\n\t\tdatetime as string,\n\t\tproduct_id as short,\n\t\tshop_id as short,\n\t\tqnty as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['data/**/dbo.arrivals.csv']) ~> Arrivals\nsource(output(\n\t\tid as short,\n\t\tdatetime as string,\n\t\tproduct_id as short,\n\t\tshop_id as boolean,\n\t\tqnty as short,\n\t\tprice as double,\n\t\tcost as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['data/**/dbo.sales.csv']) ~> Sales\nSales, Arrivals join(Sales@product_id == Arrivals@product_id\n\t&& Sales@datetime == ERROR_FUNCTION(''),\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nArrivals sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}